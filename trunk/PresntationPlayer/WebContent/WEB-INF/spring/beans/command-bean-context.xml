<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- Converter start -->
	<bean id="presentationConverter" class="com.school.presentation.converter.impl.PresentationConverter"
		scope="prototype">
		<constructor-arg type="com.school.run.CommandRunner" ref="commandRunner" />
	</bean>

	<bean id="commandRunner" class="com.school.run.impl.CommandRunnerImpl" />

	<bean name="presentationConverterChain" class="org.apache.commons.chain.impl.ChainBase" scope="prototype">
		<constructor-arg>
			<util:list>
				<ref bean="convert2Pdf" />
				<ref bean="convertPdf2Svg" />
				<ref bean="extractThumbnails" />
				<ref bean="moveUploadedData" />
				<ref bean="extractMetadata" />
				<ref bean="saveConversionData" />
				<ref bean="sendNotification" />
			</util:list>
		</constructor-arg>
	</bean>

	<bean id="convert2Pdf" class="com.school.presentation.converter.commands.Convert2Pdf" scope="prototype" />
	<bean id="convertPdf2Svg" class="com.school.presentation.converter.commands.ConvertPdf2Svg"
		scope="prototype" />
	<bean id="extractThumbnails" class="com.school.presentation.converter.commands.ExtractThumbnaisFromPdf"
		scope="prototype" />
	<bean id="moveUploadedData" class="com.school.presentation.converter.commands.MoveUploadedFile"
		scope="prototype" />
	<bean id="extractMetadata" class="com.school.presentation.converter.commands.ExtractMetadata"
		scope="prototype" />
	<bean id="saveConversionData" class="com.school.presentation.converter.commands.SaveConversionData"
		scope="prototype">
		<property name="baseDao" ref="baseDaoImpl" />
	</bean>
	<bean id="sendNotification" class="com.school.presentation.converter.commands.SendNotificationSuccess"
		scope="prototype">
		<property name="baseDao" ref="baseDaoImpl" />
		<property name="queue" ref="jobSenderImpl" />
		<property name="messages" ref="messageSource" />
	</bean>

	<!-- Converter rollback -->
	<bean id="presentationConverterRollback" class="com.school.presentation.converter.commands.ConverterRollBackCommand"
		scope="prototype">
		<property name="baseDao" ref="baseDaoImpl" />
		<property name="queue" ref="jobSenderImpl" />
		<property name="messages" ref="messageSource" />
	</bean>
	<!-- Converter end -->

	<!-- Delete presentation start -->
	<bean name="deletePptChain" class="org.apache.commons.chain.impl.ChainBase" scope="prototype">
		<constructor-arg>
			<util:list>
				<ref bean="removePptFiles" />
				<ref bean="deletePptFromDb" />
				<ref bean="deletePptSuccessNotification" />
			</util:list>
		</constructor-arg>
	</bean>

	<bean id="removePptFiles" class="com.school.presentation.delete.RemovePptFilesCommand" scope="prototype" />
	<bean id="deletePptFromDb" class="com.school.presentation.delete.DeleteFromDbCommand" scope="prototype">
		<property name="baseDao" ref="baseDaoImpl" />
	</bean>
	<bean id="deletePptSuccessNotification" class="com.school.presentation.delete.SendNotificationSuccessCommand"
		scope="prototype">
		<property name="baseDao" ref="baseDaoImpl" />
		<property name="queue" ref="jobSenderImpl" />
		<property name="messages" ref="messageSource" />
	</bean>
	<!-- delete rollback -->
	<bean id="deletePptRollback" class="com.school.presentation.delete.DeleteRollbackCommand"
		scope="prototype">
		<property name="baseDao" ref="baseDaoImpl" />
		<property name="queue" ref="jobSenderImpl" />
		<property name="messages" ref="messageSource" />
	</bean>
	<!-- Delete presentation end -->
</beans>